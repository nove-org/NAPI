// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String   @id @default(uuid())
  email            String   @unique
  bio              String
  website          String   @default("")
  username         String   @unique
  language         String
  password         String
  verified         Boolean  @default(false)
  emailVerifyCode  String
  token            String
  tokenHash        String
  pubkey           String   @default("")
  profilePublic    Boolean  @default(false)
  trackActivity    Boolean  @default(false)
  activityNotify   Boolean  @default(false)
  mfaEnabled       Boolean  @default(false)
  mfaSecret        String   @default("")
  mfaRecoveryCodes String[]
  permissionLevel  Int      @default(0)

  disabled Boolean @default(false)

  oauth_authorizations OAuth_Authorization[]
  oauth_codes          OAuth_Code[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserEmailChange {
  id          String   @id @default(uuid())
  userId      String
  codeOldMail String
  codeNewMail String
  newEmail    String
  expiresAt   DateTime
}

model OAuth_App {
  client_id           String   @id @default(uuid())
  client_secret       String
  name                String
  description         String
  link_homepage       String
  owner               String
  link_privacy_policy String
  link_tos            String
  redirect_uris       String[]
  isVerified          Boolean

  oauth_authorizations OAuth_Authorization[]
  oauth_codes          OAuth_Code[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OAuth_Authorization {
  id            String    @id @default(uuid())
  user_id       String
  user          User      @relation(fields: [user_id], references: [id])
  app_id        String
  app           OAuth_App @relation(fields: [app_id], references: [client_id])
  scopes        String[]
  redirect_uri  String
  token         String
  token_expires DateTime
  refresh_token String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OAuth_Code {
  code    String    @id
  app_id  String
  app     OAuth_App @relation(fields: [app_id], references: [client_id])
  user_id String
  user    User      @relation(fields: [user_id], references: [id])
  scopes  String[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Recovery {
  code        String   @id @unique
  userId      String
  newPassword String
  expiresAt   DateTime
}

model TrackedDevices {
  id         String @id @unique @default(uuid())
  userId     String
  ip         String
  device     String
  os_name    String
  os_version String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BlogPost {
  id              String        @id @unique @default(uuid())
  authorId        String
  text            String
  title           String
  header          String        @default("")
  commentsAllowed Boolean       @default(true)
  comments        BlogComment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BlogComment {
  id             String   @id @unique @default(uuid())
  authorId       String
  text           String
  post           BlogPost @relation(fields: [blogPostId], references: [id])
  blogPostId     String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
