<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Authorize | Nove</title>
        <link rel="icon" type="image/x-icon" href="/data/logo.png" />
        <link rel="stylesheet" href="/css/main.css" />
        <link rel="stylesheet" href="/css/auth.css" />
        <link rel="stylesheet" href="/css/loader.css" />
    </head>
    <body>
        <main id="main">
            <section class="authorize">
                <header class="info">
                    <img src="/data/logo.png" width="64" height="64" alt="Nove logo" />
                    <h1>Authorize <%= client.name %></h1>

                    <p>
                        By <% if(client.isVerified) { %>
                        <svg width="12" height="12" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M95 21L36.3647 80L6 49.4464" stroke="currentColor" stroke-width="14" />
                        </svg>
                        <% } %> <%= client.owner %>
                    </p>
                </header>
                <div class="notes">
                    <p>
                        Before you grant this app access to your account read their <a href="<%= client.link_privacy_policy %>">privacy policy</a> and
                        <a href="<%= client.link_tos %>">terms of service</a>
                    </p>

                    <p>This app asks you for the following permissions:</p>
                    <ul>
                        <% for (const _scope of scope) { %>
                        <li><%= { '*': 'Everything', 'account.read.basic': 'Basic account information', 'account.read.email': 'Email connected with your account' }[_scope] %></li>
                        <% } %>
                    </ul>
                </div>

                <div class="buttons">
                    <button id="reject">Reject</button>
                    <button id="approve">Grant access</button>
                </div>
            </section>
        </main>

        <div id="loading">
            <div class="loaderWindow">
                <div class="loader">
                    <div></div>
                    <div></div>
                    <div></div>
                    <div></div>
                </div>
                <p class="text">Preparing you to sign in...</p>
            </div>
        </div>

        <script>
            function getCookie(cookieName) {
                let name = cookieName + '=';
                let decodedCookie = decodeURIComponent(document.cookie);
                let ca = decodedCookie.split(';');

                for (let i = 0; i < ca.length; i++) {
                    let c = ca[i];

                    while (c.charAt(0) == ' ') {
                        c = c.substring(1);
                    }

                    if (c.indexOf(name) == 0) {
                        return c.substring(name.length, c.length);
                    }
                }

                return '';
            }
        </script>

        <script>
            async function main() {
                const loading = document.getElementById('loading');
                const main = document.getElementById('main');

                if (!getCookie('napiAuthorizationToken')) {
                    window.location.href = `https://nove.team/login?redirectBack=${encodeURIComponent(window.location.href)}`;
                    return;
                }

                const user = await fetch('/v1/users/me', {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                        Authorization: `Owner ${getCookie('napiAuthorizationToken')}`,
                    },
                })
                    .then((res) => {
                        if (!res.ok) {
                            if (res.status === 401) window.location.href = `https://nove.team/login?redirectBack=${encodeURIComponent(window.location.href)}`;
                            else loading.innerText = 'An error occurred. Please try again later. <span onclick="window.close">Close this window</span>';
                            return null;
                        }

                        return res.json();
                    })
                    .catch((err) => {
                        loading.innerText = 'An error occurred. Please try again later. <span onclick="window.close">Close this window</span>';
                    });

                setTimeout(() => ((main.style.display = 'flex'), (loading.style.display = 'none')), 1000);

                const query = new URLSearchParams(window.location.search);
                const state = query.get('state');
                const redirect_uri = query.get('redirect_uri');

                document.getElementById('reject').addEventListener('click', () => {
                    // error codes the same as, or close to https://learn.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-auth-code-flow#error-codes-for-authorization-endpoint-errors
                    window.location.href = new URL(`?error=access_denied${state ? '&state=' + encodeURIComponent(state) : ''}`, redirect_uri).href;
                });

                document.getElementById('approve').addEventListener('click', () => {
                    fetch('/v1/oauth2/authorize', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            Authorization: `Owner ${getCookie('napiAuthorizationToken')}`,
                        },
                        body: JSON.stringify({
                            client_id: query.get('client_id'),
                            scope: query.get('scope'),
                        }),
                    })
                        .then((res) => res.json())
                        .then((res) => {
                            window.location.href = new URL(
                                `?code=${encodeURIComponent(res.body.data.code)}${state ? '&state=' + encodeURIComponent(state) : ''}`,
                                redirect_uri
                            ).href;
                        });
                });
            }

            main();
        </script>
    </body>
</html>
